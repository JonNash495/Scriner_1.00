using exchanges.Extensions;

namespace exchanges.Exchanges
{
    public class bitmex
    {
        public string symbol { get; set; }
        public string symbolName { get { return this.symbol.RemoveSpecialCharacters(); } set { } }
        public string rootSymbol { get; set; }
        public string state { get; set; }
        public string typ { get; set; }
        public DateTime listing { get; set; }
        public DateTime? front { get; set; }
        public DateTime? expiry { get; set; }
        public DateTime? settle { get; set; }
        public DateTime? listedSettle { get; set; }
        public object relistInterval { get; set; }
        public string inverseLeg { get; set; }
        public string sellLeg { get; set; }
        public string buyLeg { get; set; }
        public object optionStrikePcnt { get; set; }
        public object optionStrikeRound { get; set; }
        public object optionStrikePrice { get; set; }
        public object optionMultiplier { get; set; }
        public string positionCurrency { get; set; }
        public string underlying { get; set; }
        public string quoteCurrency { get; set; }
        public string underlyingSymbol { get; set; }
        public string reference { get; set; }
        public string referenceSymbol { get; set; }
        public object calcInterval { get; set; }
        public object publishInterval { get; set; }
        public object publishTime { get; set; }
        public object maxOrderQty { get; set; }
        public double maxPrice { get; set; }
        public string lotSize { get; set; }
        public double tickSize { get; set; }
        public string multiplier { get; set; }
        public string settlCurrency { get; set; }
        public string? underlyingToPositionMultiplier { get; set; }
        public string? underlyingToSettleMultiplier { get; set; }
        public string? quoteToSettleMultiplier { get; set; }
        public bool isQuanto { get; set; }
        public bool isInverse { get; set; }
        public double initMargin { get; set; }
        public double maintMargin { get; set; }
        public object riskLimit { get; set; }
        public object riskStep { get; set; }
        public object limit { get; set; }
        public bool capped { get; set; }
        public bool taxed { get; set; }
        public bool deleverage { get; set; }
        public double makerFee { get; set; }
        public double takerFee { get; set; }
        public string settlementFee { get; set; }
        public string insuranceFee { get; set; }
        public string fundingBaseSymbol { get; set; }
        public string fundingQuoteSymbol { get; set; }
        public string fundingPremiumSymbol { get; set; }
        public DateTime? fundingTimestamp { get; set; }
        public DateTime? fundingInterval { get; set; }
        public double? fundingRate { get; set; }
        public double? indicativeFundingRate { get; set; }
        public object rebalanceTimestamp { get; set; }
        public object rebalanceInterval { get; set; }
        public DateTime openingTimestamp { get; set; }
        public DateTime closingTimestamp { get; set; }
        public DateTime sessionInterval { get; set; }
        public double prevClosePrice { get; set; }
        public object limitDownPrice { get; set; }
        public object limitUpPrice { get; set; }
        public double? bankruptLimitDownPrice { get; set; }
        public double? bankruptLimitUpPrice { get; set; }
        public object prevTotalVolume { get; set; }
        public object totalVolume { get; set; }
        public string volume { get; set; }
        public object volume24h { get; set; }
        public object prevTotalTurnover { get; set; }
        public object totalTurnover { get; set; }
        public object turnover { get; set; }
        public object turnover24h { get; set; }
        public double homeNotional24h { get; set; }
        public double foreignNotional24h { get; set; }
        public double prevPrice24h { get; set; }
        public double? vwap { get; set; }
        public double? highPrice { get; set; }
        public double? lowPrice { get; set; }
        public double lastPrice { get; set; }
        public double lastPriceProtected { get; set; }
        public string lastTickDirection { get; set; }
        public double lastChangePcnt { get; set; }
        public double bidPrice { get; set; }
        public double midPrice { get; set; }
        public double askPrice { get; set; }
        public double? impactBidPrice { get; set; }
        public double? impactMidPrice { get; set; }
        public double? impactAskPrice { get; set; }
        public bool hasLiquidity { get; set; }
        public object openInterest { get; set; }
        public object openValue { get; set; }
        public string fairMethod { get; set; }
        public double? fairBasisRate { get; set; }
        public double? fairBasis { get; set; }
        public double? fairPrice { get; set; }
        public string markMethod { get; set; }
        public double markPrice { get; set; }
        public string? indicativeTaxRate { get; set; }
        public double? indicativeSettlePrice { get; set; }
        public object optionUnderlyingPrice { get; set; }
        public object settledPriceAdjustmentRate { get; set; }
        public object settledPrice { get; set; }
        public DateTime timestamp { get; set; }
    }
}